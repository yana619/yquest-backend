<?php

namespace QuestBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;

/**
 * QuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends EntityRepository
{
    /**
     * @param $chapterId
     * @param $userId
     * @return array
     */
    public function getAnsweredByUserQuestions($chapterId, $userId)
    {
        return $this->getEntityManager()
            ->getRepository('QuestBundle:Question')
            ->createQueryBuilder('q')
            ->innerJoin('q.userQuestions', 'uq')
            ->where('uq.question = q.id')
            ->andWhere('uq.user = :userId')
            ->andWhere('q.chapter = :chapterId')
            ->orderBy('q.position', 'asc')
            ->setParameters([
                'userId' => $userId,
                'chapterId' => $chapterId
            ])
            ->getQuery()
            ->getResult();
    }

    /**
     * @param $chapterId
     * @param $userId
     * @return mixed
     */
    public function getActiveQuestion($chapterId, $userId)
    {
        return $this->getEntityManager()
            ->getRepository('QuestBundle:Question')
            ->createQueryBuilder('q')
            ->leftJoin('q.userQuestions', 'uq',  Expr\Join::WITH, 'q.id = uq.question AND uq.user = :userId')
            ->andWhere('uq.user is null')
            ->andWhere('q.chapter = :chapterId')
            ->orderBy('q.position', 'asc')
            ->setParameters([
                'userId' => $userId,
                'chapterId' => $chapterId
            ])
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }
}
